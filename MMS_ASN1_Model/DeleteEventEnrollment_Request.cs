
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Choice ( Name = "DeleteEventEnrollment_Request") ]
    public class DeleteEventEnrollment_Request : IASN1PreparedElement {
                    
        
	private System.Collections.Generic.ICollection<ObjectName> specific_ ;
        private bool  specific_selected = false ;
        
                
        
[ASN1SequenceOf( Name = "specific", IsSetOf = false  )]

    
        [ASN1Element ( Name = "specific", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<ObjectName> Specific
        {
            get { return specific_; }
            set { selectSpecific(value); }
        }
        
                
          
        
	private ObjectName ec_ ;
        private bool  ec_selected = false ;
        
                
        
        [ASN1Element ( Name = "ec", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public ObjectName Ec
        {
            get { return ec_; }
            set { selectEc(value); }
        }
        
                
          
        
	private ObjectName ea_ ;
        private bool  ea_selected = false ;
        
                
        
        [ASN1Element ( Name = "ea", IsOptional =  false , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public ObjectName Ea
        {
            get { return ea_; }
            set { selectEa(value); }
        }
        
                
          
        public bool isSpecificSelected () {
            return this.specific_selected ;
        }

        


        public void selectSpecific (System.Collections.Generic.ICollection<ObjectName> val) {
            this.specific_ = val;
            this.specific_selected = true;
            
            
                    this.ec_selected = false;
                
                    this.ea_selected = false;
                            
        }
        
          
        public bool isEcSelected () {
            return this.ec_selected ;
        }

        


        public void selectEc (ObjectName val) {
            this.ec_ = val;
            this.ec_selected = true;
            
            
                    this.specific_selected = false;
                
                    this.ea_selected = false;
                            
        }
        
          
        public bool isEaSelected () {
            return this.ea_selected ;
        }

        


        public void selectEa (ObjectName val) {
            this.ea_ = val;
            this.ea_selected = true;
            
            
                    this.specific_selected = false;
                
                    this.ec_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(DeleteEventEnrollment_Request));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
            
}
