
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Choice ( Name = "CS_Status_Response") ]
    public class CS_Status_Response : IASN1PreparedElement {
                    
        
	private FullResponseSequenceType fullResponse_ ;
        private bool  fullResponse_selected = false ;
        
                
        
       [ASN1PreparedElement]
       [ASN1Sequence ( Name = "fullResponse", IsSet = false  )]
       public class FullResponseSequenceType : IASN1PreparedElement {
                        
	private OperationState operationState_ ;
	
        [ASN1Element ( Name = "operationState", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public OperationState OperationState
        {
            get { return operationState_; }
            set { operationState_ = value;  }
        }
        
                
          
	private ExtendedStatus extendedStatus_ ;
	
        [ASN1Element ( Name = "extendedStatus", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public ExtendedStatus ExtendedStatus
        {
            get { return extendedStatus_; }
            set { extendedStatus_ = value;  }
        }
        
                
          
	private ExtendedStatus extendedStatusMask_ ;
	
        [ASN1Element ( Name = "extendedStatusMask", IsOptional =  false , HasTag =  true, Tag = 2 , HasDefaultValue =  true )  ]
    
        public ExtendedStatus ExtendedStatusMask
        {
            get { return extendedStatusMask_; }
            set { extendedStatusMask_ = value;  }
        }
        
                
          
	private SelectedProgramInvocationChoiceType selectedProgramInvocation_ ;
	

    [ASN1PreparedElement]    
    [ASN1Choice ( Name = "selectedProgramInvocation" )]
    public class SelectedProgramInvocationChoiceType : IASN1PreparedElement  {
	            
        
	private Identifier programInvocation_ ;
        private bool  programInvocation_selected = false ;
        
                
        
        [ASN1Element ( Name = "programInvocation", IsOptional =  false , HasTag =  true, Tag = 3 , HasDefaultValue =  false )  ]
    
        public Identifier ProgramInvocation
        {
            get { return programInvocation_; }
            set { selectProgramInvocation(value); }
        }
        
                
          
        
	private NullObject noneSelected_ ;
        private bool  noneSelected_selected = false ;
        
                
        
        [ASN1Null ( Name = "noneSelected" )]
    
        [ASN1Element ( Name = "noneSelected", IsOptional =  false , HasTag =  true, Tag = 4 , HasDefaultValue =  false )  ]
    
        public NullObject NoneSelected
        {
            get { return noneSelected_; }
            set { selectNoneSelected(value); }
        }
        
                
          
        public bool isProgramInvocationSelected () {
            return this.programInvocation_selected ;
        }

        


        public void selectProgramInvocation (Identifier val) {
            this.programInvocation_ = val;
            this.programInvocation_selected = true;
            
            
                    this.noneSelected_selected = false;
                            
        }
        
          
        public bool isNoneSelectedSelected () {
            return this.noneSelected_selected ;
        }

        
        public void selectNoneSelected () {
            selectNoneSelected (new NullObject());
	}
	


        public void selectNoneSelected (NullObject val) {
            this.noneSelected_ = val;
            this.noneSelected_selected = true;
            
            
                    this.programInvocation_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(SelectedProgramInvocationChoiceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
                
        [ASN1Element ( Name = "selectedProgramInvocation", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public SelectedProgramInvocationChoiceType SelectedProgramInvocation
        {
            get { return selectedProgramInvocation_; }
            set { selectedProgramInvocation_ = value;  }
        }
        
                
  
                
                public void initWithDefaults() {
            		ExtendedStatus param_ExtendedStatusMask =         
            new ExtendedStatus (CoderUtils.defStringToOctetString("'1111'B"));
        ExtendedStatusMask = param_ExtendedStatusMask;
    
                }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(FullResponseSequenceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

                
       }
                
        [ASN1Element ( Name = "fullResponse", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public FullResponseSequenceType FullResponse
        {
            get { return fullResponse_; }
            set { selectFullResponse(value); }
        }
        
                
          
        
	private NullObject noExtraResponse_ ;
        private bool  noExtraResponse_selected = false ;
        
                
        
        [ASN1Null ( Name = "noExtraResponse" )]
    
        [ASN1Element ( Name = "noExtraResponse", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public NullObject NoExtraResponse
        {
            get { return noExtraResponse_; }
            set { selectNoExtraResponse(value); }
        }
        
                
          
        public bool isFullResponseSelected () {
            return this.fullResponse_selected ;
        }

        


        public void selectFullResponse (FullResponseSequenceType val) {
            this.fullResponse_ = val;
            this.fullResponse_selected = true;
            
            
                    this.noExtraResponse_selected = false;
                            
        }
        
          
        public bool isNoExtraResponseSelected () {
            return this.noExtraResponse_selected ;
        }

        
        public void selectNoExtraResponse () {
            selectNoExtraResponse (new NullObject());
	}
	


        public void selectNoExtraResponse (NullObject val) {
            this.noExtraResponse_ = val;
            this.noExtraResponse_selected = true;
            
            
                    this.fullResponse_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(CS_Status_Response));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
            
}
