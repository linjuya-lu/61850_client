
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Choice ( Name = "AdditionalService_Error") ]
    public class AdditionalService_Error : IASN1PreparedElement {
                    
        
	private DefineEventConditionList_Error defineEcl_ ;
        private bool  defineEcl_selected = false ;
        
                
        
        [ASN1Element ( Name = "defineEcl", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public DefineEventConditionList_Error DefineEcl
        {
            get { return defineEcl_; }
            set { selectDefineEcl(value); }
        }
        
                
          
        
	private AddEventConditionListReference_Error addECLReference_ ;
        private bool  addECLReference_selected = false ;
        
                
        
        [ASN1Element ( Name = "addECLReference", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public AddEventConditionListReference_Error AddECLReference
        {
            get { return addECLReference_; }
            set { selectAddECLReference(value); }
        }
        
                
          
        
	private RemoveEventConditionListReference_Error removeECLReference_ ;
        private bool  removeECLReference_selected = false ;
        
                
        
        [ASN1Element ( Name = "removeECLReference", IsOptional =  false , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public RemoveEventConditionListReference_Error RemoveECLReference
        {
            get { return removeECLReference_; }
            set { selectRemoveECLReference(value); }
        }
        
                
          
        
	private InitiateUnitControl_Error initiateUC_ ;
        private bool  initiateUC_selected = false ;
        
                
        
        [ASN1Element ( Name = "initiateUC", IsOptional =  false , HasTag =  true, Tag = 3 , HasDefaultValue =  false )  ]
    
        public InitiateUnitControl_Error InitiateUC
        {
            get { return initiateUC_; }
            set { selectInitiateUC(value); }
        }
        
                
          
        
	private StartUnitControl_Error startUC_ ;
        private bool  startUC_selected = false ;
        
                
        
        [ASN1Element ( Name = "startUC", IsOptional =  false , HasTag =  true, Tag = 4 , HasDefaultValue =  false )  ]
    
        public StartUnitControl_Error StartUC
        {
            get { return startUC_; }
            set { selectStartUC(value); }
        }
        
                
          
        
	private StopUnitControl_Error stopUC_ ;
        private bool  stopUC_selected = false ;
        
                
        
        [ASN1Element ( Name = "stopUC", IsOptional =  false , HasTag =  true, Tag = 5 , HasDefaultValue =  false )  ]
    
        public StopUnitControl_Error StopUC
        {
            get { return stopUC_; }
            set { selectStopUC(value); }
        }
        
                
          
        
	private DeleteUnitControl_Error deleteUC_ ;
        private bool  deleteUC_selected = false ;
        
                
        
        [ASN1Element ( Name = "deleteUC", IsOptional =  false , HasTag =  true, Tag = 6 , HasDefaultValue =  false )  ]
    
        public DeleteUnitControl_Error DeleteUC
        {
            get { return deleteUC_; }
            set { selectDeleteUC(value); }
        }
        
                
          
        
	private LoadUnitControlFromFile_Error loadUCFromFile_ ;
        private bool  loadUCFromFile_selected = false ;
        
                
        
        [ASN1Element ( Name = "loadUCFromFile", IsOptional =  false , HasTag =  true, Tag = 7 , HasDefaultValue =  false )  ]
    
        public LoadUnitControlFromFile_Error LoadUCFromFile
        {
            get { return loadUCFromFile_; }
            set { selectLoadUCFromFile(value); }
        }
        
                
          
        public bool isDefineEclSelected () {
            return this.defineEcl_selected ;
        }

        


        public void selectDefineEcl (DefineEventConditionList_Error val) {
            this.defineEcl_ = val;
            this.defineEcl_selected = true;
            
            
                    this.addECLReference_selected = false;
                
                    this.removeECLReference_selected = false;
                
                    this.initiateUC_selected = false;
                
                    this.startUC_selected = false;
                
                    this.stopUC_selected = false;
                
                    this.deleteUC_selected = false;
                
                    this.loadUCFromFile_selected = false;
                            
        }
        
          
        public bool isAddECLReferenceSelected () {
            return this.addECLReference_selected ;
        }

        


        public void selectAddECLReference (AddEventConditionListReference_Error val) {
            this.addECLReference_ = val;
            this.addECLReference_selected = true;
            
            
                    this.defineEcl_selected = false;
                
                    this.removeECLReference_selected = false;
                
                    this.initiateUC_selected = false;
                
                    this.startUC_selected = false;
                
                    this.stopUC_selected = false;
                
                    this.deleteUC_selected = false;
                
                    this.loadUCFromFile_selected = false;
                            
        }
        
          
        public bool isRemoveECLReferenceSelected () {
            return this.removeECLReference_selected ;
        }

        


        public void selectRemoveECLReference (RemoveEventConditionListReference_Error val) {
            this.removeECLReference_ = val;
            this.removeECLReference_selected = true;
            
            
                    this.defineEcl_selected = false;
                
                    this.addECLReference_selected = false;
                
                    this.initiateUC_selected = false;
                
                    this.startUC_selected = false;
                
                    this.stopUC_selected = false;
                
                    this.deleteUC_selected = false;
                
                    this.loadUCFromFile_selected = false;
                            
        }
        
          
        public bool isInitiateUCSelected () {
            return this.initiateUC_selected ;
        }

        


        public void selectInitiateUC (InitiateUnitControl_Error val) {
            this.initiateUC_ = val;
            this.initiateUC_selected = true;
            
            
                    this.defineEcl_selected = false;
                
                    this.addECLReference_selected = false;
                
                    this.removeECLReference_selected = false;
                
                    this.startUC_selected = false;
                
                    this.stopUC_selected = false;
                
                    this.deleteUC_selected = false;
                
                    this.loadUCFromFile_selected = false;
                            
        }
        
          
        public bool isStartUCSelected () {
            return this.startUC_selected ;
        }

        


        public void selectStartUC (StartUnitControl_Error val) {
            this.startUC_ = val;
            this.startUC_selected = true;
            
            
                    this.defineEcl_selected = false;
                
                    this.addECLReference_selected = false;
                
                    this.removeECLReference_selected = false;
                
                    this.initiateUC_selected = false;
                
                    this.stopUC_selected = false;
                
                    this.deleteUC_selected = false;
                
                    this.loadUCFromFile_selected = false;
                            
        }
        
          
        public bool isStopUCSelected () {
            return this.stopUC_selected ;
        }

        


        public void selectStopUC (StopUnitControl_Error val) {
            this.stopUC_ = val;
            this.stopUC_selected = true;
            
            
                    this.defineEcl_selected = false;
                
                    this.addECLReference_selected = false;
                
                    this.removeECLReference_selected = false;
                
                    this.initiateUC_selected = false;
                
                    this.startUC_selected = false;
                
                    this.deleteUC_selected = false;
                
                    this.loadUCFromFile_selected = false;
                            
        }
        
          
        public bool isDeleteUCSelected () {
            return this.deleteUC_selected ;
        }

        


        public void selectDeleteUC (DeleteUnitControl_Error val) {
            this.deleteUC_ = val;
            this.deleteUC_selected = true;
            
            
                    this.defineEcl_selected = false;
                
                    this.addECLReference_selected = false;
                
                    this.removeECLReference_selected = false;
                
                    this.initiateUC_selected = false;
                
                    this.startUC_selected = false;
                
                    this.stopUC_selected = false;
                
                    this.loadUCFromFile_selected = false;
                            
        }
        
          
        public bool isLoadUCFromFileSelected () {
            return this.loadUCFromFile_selected ;
        }

        


        public void selectLoadUCFromFile (LoadUnitControlFromFile_Error val) {
            this.loadUCFromFile_ = val;
            this.loadUCFromFile_selected = true;
            
            
                    this.defineEcl_selected = false;
                
                    this.addECLReference_selected = false;
                
                    this.removeECLReference_selected = false;
                
                    this.initiateUC_selected = false;
                
                    this.startUC_selected = false;
                
                    this.stopUC_selected = false;
                
                    this.deleteUC_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(AdditionalService_Error));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
            
}
