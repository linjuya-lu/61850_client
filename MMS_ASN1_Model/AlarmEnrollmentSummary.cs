
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model
{


    [ASN1PreparedElement]
    [ASN1Sequence(Name = "AlarmEnrollmentSummary", IsSet = false)]
    public class AlarmEnrollmentSummary : IASN1PreparedElement
    {

        private ObjectName eventEnrollmentName_;

        [ASN1Element(Name = "eventEnrollmentName", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]

        public ObjectName EventEnrollmentName
        {
            get { return eventEnrollmentName_; }
            set { eventEnrollmentName_ = value; }
        }



        private ApplicationReference clientApplication_;

        private bool clientApplication_present = false;

        [ASN1Element(Name = "clientApplication", IsOptional = true, HasTag = true, Tag = 2, HasDefaultValue = false)]

        public ApplicationReference ClientApplication
        {
            get { return clientApplication_; }
            set { clientApplication_ = value; clientApplication_present = true; }
        }



        private Unsigned8 severity_;

        [ASN1Element(Name = "severity", IsOptional = false, HasTag = true, Tag = 3, HasDefaultValue = false)]

        public Unsigned8 Severity
        {
            get { return severity_; }
            set { severity_ = value; }
        }



        private EC_State currentState_;

        [ASN1Element(Name = "currentState", IsOptional = false, HasTag = true, Tag = 4, HasDefaultValue = false)]

        public EC_State CurrentState
        {
            get { return currentState_; }
            set { currentState_ = value; }
        }



        private EN_Additional_Detail displayEnhancement_;

        private bool displayEnhancement_present = false;

        [ASN1Element(Name = "displayEnhancement", IsOptional = true, HasTag = true, Tag = 5, HasDefaultValue = false)]

        public EN_Additional_Detail DisplayEnhancement
        {
            get { return displayEnhancement_; }
            set { displayEnhancement_ = value; displayEnhancement_present = true; }
        }



        private bool notificationLost_;
        [ASN1Boolean(Name = "")]

        [ASN1Element(Name = "notificationLost", IsOptional = false, HasTag = true, Tag = 6, HasDefaultValue = true)]

        public bool NotificationLost
        {
            get { return notificationLost_; }
            set { notificationLost_ = value; }
        }



        private AlarmAckRule alarmAcknowledgmentRule_;

        [ASN1Element(Name = "alarmAcknowledgmentRule", IsOptional = false, HasTag = true, Tag = 7, HasDefaultValue = false)]

        public AlarmAckRule AlarmAcknowledgmentRule
        {
            get { return alarmAcknowledgmentRule_; }
            set { alarmAcknowledgmentRule_ = value; }
        }



        private EE_State enrollmentState_;

        private bool enrollmentState_present = false;

        [ASN1Element(Name = "enrollmentState", IsOptional = true, HasTag = true, Tag = 8, HasDefaultValue = false)]

        public EE_State EnrollmentState
        {
            get { return enrollmentState_; }
            set { enrollmentState_ = value; enrollmentState_present = true; }
        }



        private EventTime timeOfLastTransitionToActive_;

        private bool timeOfLastTransitionToActive_present = false;

        [ASN1Element(Name = "timeOfLastTransitionToActive", IsOptional = true, HasTag = true, Tag = 9, HasDefaultValue = false)]

        public EventTime TimeOfLastTransitionToActive
        {
            get { return timeOfLastTransitionToActive_; }
            set { timeOfLastTransitionToActive_ = value; timeOfLastTransitionToActive_present = true; }
        }



        private EventTime timeActiveAcknowledged_;

        private bool timeActiveAcknowledged_present = false;

        [ASN1Element(Name = "timeActiveAcknowledged", IsOptional = true, HasTag = true, Tag = 10, HasDefaultValue = false)]

        public EventTime TimeActiveAcknowledged
        {
            get { return timeActiveAcknowledged_; }
            set { timeActiveAcknowledged_ = value; timeActiveAcknowledged_present = true; }
        }



        private EventTime timeOfLastTransitionToIdle_;

        private bool timeOfLastTransitionToIdle_present = false;

        [ASN1Element(Name = "timeOfLastTransitionToIdle", IsOptional = true, HasTag = true, Tag = 11, HasDefaultValue = false)]

        public EventTime TimeOfLastTransitionToIdle
        {
            get { return timeOfLastTransitionToIdle_; }
            set { timeOfLastTransitionToIdle_ = value; timeOfLastTransitionToIdle_present = true; }
        }



        private EventTime timeIdleAcknowledged_;

        private bool timeIdleAcknowledged_present = false;

        [ASN1Element(Name = "timeIdleAcknowledged", IsOptional = true, HasTag = true, Tag = 12, HasDefaultValue = false)]

        public EventTime TimeIdleAcknowledged
        {
            get { return timeIdleAcknowledged_; }
            set { timeIdleAcknowledged_ = value; timeIdleAcknowledged_present = true; }
        }



        public bool isClientApplicationPresent()
        {
            return this.clientApplication_present == true;
        }

        public bool isDisplayEnhancementPresent()
        {
            return this.displayEnhancement_present == true;
        }

        public bool isEnrollmentStatePresent()
        {
            return this.enrollmentState_present == true;
        }

        public bool isTimeOfLastTransitionToActivePresent()
        {
            return this.timeOfLastTransitionToActive_present == true;
        }

        public bool isTimeActiveAcknowledgedPresent()
        {
            return this.timeActiveAcknowledged_present == true;
        }

        public bool isTimeOfLastTransitionToIdlePresent()
        {
            return this.timeOfLastTransitionToIdle_present == true;
        }

        public bool isTimeIdleAcknowledgedPresent()
        {
            return this.timeIdleAcknowledged_present == true;
        }


        public void initWithDefaults()
        {
            bool param_NotificationLost =
        false;
            NotificationLost = param_NotificationLost;

        }


        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(AlarmEnrollmentSummary));
        public IASN1PreparedElementData PreparedData
        {
            get { return preparedData; }
        }


    }

}
