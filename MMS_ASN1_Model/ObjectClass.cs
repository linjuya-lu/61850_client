
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model
{


    [ASN1PreparedElement]
    [ASN1Choice(Name = "ObjectClass")]
    public class ObjectClass : IASN1PreparedElement
    {

        public const long ObjectClass__basicObjectClass_namedVariable = 0;
        public const long ObjectClass__basicObjectClass_scatteredAccess = 1;
        public const long ObjectClass__basicObjectClass_namedVariableList = 2;
        public const long ObjectClass__basicObjectClass_namedType = 3;
        public const long ObjectClass__basicObjectClass_semaphore = 4;
        public const long ObjectClass__basicObjectClass_eventCondition = 5;
        public const long ObjectClass__basicObjectClass_eventAction = 6;
        public const long ObjectClass__basicObjectClass_eventEnrollment = 7;
        public const long ObjectClass__basicObjectClass_journal = 8;
        public const long ObjectClass__basicObjectClass_domain = 9;
        public const long ObjectClass__basicObjectClass_programInvocation = 10;
        public const long ObjectClass__basicObjectClass_operatorStation = 11;
        public const long ObjectClass__basicObjectClass_dataExchange = 12;
        public const long ObjectClass__basicObjectClass_accessControlList = 13;

        private long basicObjectClass_;
        private bool basicObjectClass_selected = false;


        [ASN1Integer(Name = "")]

        [ASN1Element(Name = "basicObjectClass", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]

        public long BasicObjectClass
        {
            get { return basicObjectClass_; }
            set { selectBasicObjectClass(value); }
        }




        private long csObjectClass_;
        private bool csObjectClass_selected = false;


        [ASN1Integer(Name = "")]

        [ASN1Element(Name = "csObjectClass", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]

        public long CsObjectClass
        {
            get { return csObjectClass_; }
            set { selectCsObjectClass(value); }
        }



        public bool isBasicObjectClassSelected()
        {
            return this.basicObjectClass_selected;
        }




        public void selectBasicObjectClass(long val)
        {
            this.basicObjectClass_ = val;
            this.basicObjectClass_selected = true;


            this.csObjectClass_selected = false;

        }


        public bool isCsObjectClassSelected()
        {
            return this.csObjectClass_selected;
        }




        public void selectCsObjectClass(long val)
        {
            this.csObjectClass_ = val;
            this.csObjectClass_selected = true;


            this.basicObjectClass_selected = false;

        }



        public void initWithDefaults()
        {
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ObjectClass));
        public IASN1PreparedElementData PreparedData
        {
            get { return preparedData; }
        }

    }

}
