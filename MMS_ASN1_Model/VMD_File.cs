
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "VMD_File", IsSet = false  )]
    public class VMD_File : IASN1PreparedElement {
                    
	private ApplicationReference executiveFunction_ ;
	
        [ASN1Element ( Name = "executiveFunction", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public ApplicationReference ExecutiveFunction
        {
            get { return executiveFunction_; }
            set { executiveFunction_ = value;  }
        }
        
                
          
	private MMSString vendorName_ ;
	
        [ASN1Element ( Name = "vendorName", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public MMSString VendorName
        {
            get { return vendorName_; }
            set { vendorName_ = value;  }
        }
        
                
          
	private MMSString modelName_ ;
	
        [ASN1Element ( Name = "modelName", IsOptional =  false , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public MMSString ModelName
        {
            get { return modelName_; }
            set { modelName_ = value;  }
        }
        
                
          
	private MMSString revision_ ;
	
        [ASN1Element ( Name = "revision", IsOptional =  false , HasTag =  true, Tag = 3 , HasDefaultValue =  false )  ]
    
        public MMSString Revision
        {
            get { return revision_; }
            set { revision_ = value;  }
        }
        
                
          
	private ObjectIdentifier abstractSyntaxes_ ;
	[ASN1ObjectIdentifier( Name = "" )]
    
        [ASN1Element ( Name = "abstractSyntaxes", IsOptional =  false , HasTag =  true, Tag = 4 , HasDefaultValue =  false )  ]
    
        public ObjectIdentifier AbstractSyntaxes
        {
            get { return abstractSyntaxes_; }
            set { abstractSyntaxes_ = value;  }
        }
        
                
          
	private Access_Control_List_instance accessControl_ ;
	
        [ASN1Element ( Name = "accessControl", IsOptional =  false , HasTag =  true, Tag = 5 , HasDefaultValue =  false )  ]
    
        public Access_Control_List_instance AccessControl
        {
            get { return accessControl_; }
            set { accessControl_ = value;  }
        }
        
                
          
	private LogicalStatus logicalStatus_ ;
	
        [ASN1Element ( Name = "logicalStatus", IsOptional =  false , HasTag =  true, Tag = 6 , HasDefaultValue =  false )  ]
    
        public LogicalStatus LogicalStatus
        {
            get { return logicalStatus_; }
            set { logicalStatus_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<MMSString> capabilities_ ;
	
[ASN1SequenceOf( Name = "capabilities", IsSetOf = false  )]

    
        [ASN1Element ( Name = "capabilities", IsOptional =  false , HasTag =  true, Tag = 7 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<MMSString> Capabilities
        {
            get { return capabilities_; }
            set { capabilities_ = value;  }
        }
        
                
          
	private PhysicalStatus physicalStatus_ ;
	
        [ASN1Element ( Name = "physicalStatus", IsOptional =  false , HasTag =  true, Tag = 8 , HasDefaultValue =  false )  ]
    
        public PhysicalStatus PhysicalStatus
        {
            get { return physicalStatus_; }
            set { physicalStatus_ = value;  }
        }
        
                
          
	private BitString local_detail_ ;
	[ASN1BitString( Name = "" )]
    
        [ASN1Element ( Name = "local-detail", IsOptional =  false , HasTag =  true, Tag = 9 , HasDefaultValue =  false )  ]
    
        public BitString Local_detail
        {
            get { return local_detail_; }
            set { local_detail_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Access_Control_List_instance> accessControlLists_ ;
	
[ASN1SequenceOf( Name = "accessControlLists", IsSetOf = false  )]

    
        [ASN1Element ( Name = "accessControlLists", IsOptional =  false , HasTag =  true, Tag = 10 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Access_Control_List_instance> AccessControlLists
        {
            get { return accessControlLists_; }
            set { accessControlLists_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Domain_instance> domains_ ;
	
[ASN1SequenceOf( Name = "domains", IsSetOf = false  )]

    
        [ASN1Element ( Name = "domains", IsOptional =  false , HasTag =  true, Tag = 11 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Domain_instance> Domains
        {
            get { return domains_; }
            set { domains_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Program_Invocation_instance> programInvocations_ ;
	
[ASN1SequenceOf( Name = "programInvocations", IsSetOf = false  )]

    
        [ASN1Element ( Name = "programInvocations", IsOptional =  false , HasTag =  true, Tag = 12 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Program_Invocation_instance> ProgramInvocations
        {
            get { return programInvocations_; }
            set { programInvocations_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Unit_Control_instance> unitControls_ ;
	
[ASN1SequenceOf( Name = "unitControls", IsSetOf = false  )]

    
        [ASN1Element ( Name = "unitControls", IsOptional =  false , HasTag =  true, Tag = 13 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Unit_Control_instance> UnitControls
        {
            get { return unitControls_; }
            set { unitControls_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Unnamed_Variable_instance> unnamedVariables_ ;
	
[ASN1SequenceOf( Name = "unnamedVariables", IsSetOf = false  )]

    
        [ASN1Element ( Name = "unnamedVariables", IsOptional =  false , HasTag =  true, Tag = 14 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Unnamed_Variable_instance> UnnamedVariables
        {
            get { return unnamedVariables_; }
            set { unnamedVariables_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Named_Variable_instance> namedVariables_ ;
	
[ASN1SequenceOf( Name = "namedVariables", IsSetOf = false  )]

    
        [ASN1Element ( Name = "namedVariables", IsOptional =  false , HasTag =  true, Tag = 15 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Named_Variable_instance> NamedVariables
        {
            get { return namedVariables_; }
            set { namedVariables_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Named_Variable_List_instance> namedVariableLists_ ;
	
[ASN1SequenceOf( Name = "namedVariableLists", IsSetOf = false  )]

    
        [ASN1Element ( Name = "namedVariableLists", IsOptional =  false , HasTag =  true, Tag = 16 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Named_Variable_List_instance> NamedVariableLists
        {
            get { return namedVariableLists_; }
            set { namedVariableLists_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Named_Type_instance> namedTypes_ ;
	
[ASN1SequenceOf( Name = "namedTypes", IsSetOf = false  )]

    
        [ASN1Element ( Name = "namedTypes", IsOptional =  false , HasTag =  true, Tag = 17 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Named_Type_instance> NamedTypes
        {
            get { return namedTypes_; }
            set { namedTypes_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Data_Exchange_instance> dataExchanges_ ;
	
[ASN1SequenceOf( Name = "dataExchanges", IsSetOf = false  )]

    
        [ASN1Element ( Name = "dataExchanges", IsOptional =  false , HasTag =  true, Tag = 18 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Data_Exchange_instance> DataExchanges
        {
            get { return dataExchanges_; }
            set { dataExchanges_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Semaphore_instance> semaphores_ ;
	
[ASN1SequenceOf( Name = "semaphores", IsSetOf = false  )]

    
        [ASN1Element ( Name = "semaphores", IsOptional =  false , HasTag =  true, Tag = 19 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Semaphore_instance> Semaphores
        {
            get { return semaphores_; }
            set { semaphores_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Operator_Station_instance> operatorStations_ ;
	
[ASN1SequenceOf( Name = "operatorStations", IsSetOf = false  )]

    
        [ASN1Element ( Name = "operatorStations", IsOptional =  false , HasTag =  true, Tag = 20 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Operator_Station_instance> OperatorStations
        {
            get { return operatorStations_; }
            set { operatorStations_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Event_Condition_instance> eventConditions_ ;
	
[ASN1SequenceOf( Name = "eventConditions", IsSetOf = false  )]

    
        [ASN1Element ( Name = "eventConditions", IsOptional =  false , HasTag =  true, Tag = 21 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Event_Condition_instance> EventConditions
        {
            get { return eventConditions_; }
            set { eventConditions_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Event_Action_instance> eventActions_ ;
	
[ASN1SequenceOf( Name = "eventActions", IsSetOf = false  )]

    
        [ASN1Element ( Name = "eventActions", IsOptional =  false , HasTag =  true, Tag = 22 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Event_Action_instance> EventActions
        {
            get { return eventActions_; }
            set { eventActions_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Event_Enrollment_instance> eventEnrollments_ ;
	
[ASN1SequenceOf( Name = "eventEnrollments", IsSetOf = false  )]

    
        [ASN1Element ( Name = "eventEnrollments", IsOptional =  false , HasTag =  true, Tag = 23 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Event_Enrollment_instance> EventEnrollments
        {
            get { return eventEnrollments_; }
            set { eventEnrollments_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Event_Condition_List_instance> eventConditionLists_ ;
	
[ASN1SequenceOf( Name = "eventConditionLists", IsSetOf = false  )]

    
        [ASN1Element ( Name = "eventConditionLists", IsOptional =  false , HasTag =  true, Tag = 24 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Event_Condition_List_instance> EventConditionLists
        {
            get { return eventConditionLists_; }
            set { eventConditionLists_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Journal_instance> journals_ ;
	
[ASN1SequenceOf( Name = "journals", IsSetOf = false  )]

    
        [ASN1Element ( Name = "journals", IsOptional =  false , HasTag =  true, Tag = 25 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Journal_instance> Journals
        {
            get { return journals_; }
            set { journals_ = value;  }
        }
        
                
          
	private Selected_Program_InvocationChoiceType selected_Program_Invocation_ ;
	

    [ASN1PreparedElement]    
    [ASN1Choice ( Name = "selected-Program-Invocation" )]
    public class Selected_Program_InvocationChoiceType : IASN1PreparedElement  {
	            
        
	private Program_Invocation_instance selectedProgram_ ;
        private bool  selectedProgram_selected = false ;
        
                
        
        [ASN1Element ( Name = "selectedProgram", IsOptional =  false , HasTag =  true, Tag = 26 , HasDefaultValue =  false )  ]
    
        public Program_Invocation_instance SelectedProgram
        {
            get { return selectedProgram_; }
            set { selectSelectedProgram(value); }
        }
        
                
          
        
	private NullObject noneSelected_ ;
        private bool  noneSelected_selected = false ;
        
                
        
        [ASN1Null ( Name = "noneSelected" )]
    
        [ASN1Element ( Name = "noneSelected", IsOptional =  false , HasTag =  true, Tag = 27 , HasDefaultValue =  false )  ]
    
        public NullObject NoneSelected
        {
            get { return noneSelected_; }
            set { selectNoneSelected(value); }
        }
        
                
          
        public bool isSelectedProgramSelected () {
            return this.selectedProgram_selected ;
        }

        


        public void selectSelectedProgram (Program_Invocation_instance val) {
            this.selectedProgram_ = val;
            this.selectedProgram_selected = true;
            
            
                    this.noneSelected_selected = false;
                            
        }
        
          
        public bool isNoneSelectedSelected () {
            return this.noneSelected_selected ;
        }

        
        public void selectNoneSelected () {
            selectNoneSelected (new NullObject());
	}
	


        public void selectNoneSelected (NullObject val) {
            this.noneSelected_ = val;
            this.noneSelected_selected = true;
            
            
                    this.selectedProgram_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(Selected_Program_InvocationChoiceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
                
        [ASN1Element ( Name = "selected-Program-Invocation", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public Selected_Program_InvocationChoiceType Selected_Program_Invocation
        {
            get { return selected_Program_Invocation_; }
            set { selected_Program_Invocation_ = value;  }
        }
        
                
  

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(VMD_File));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
