
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "ReadJournal_Request", IsSet = false  )]
    public class ReadJournal_Request : IASN1PreparedElement {
                    
	private ObjectName journalName_ ;
	
        [ASN1Element ( Name = "journalName", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public ObjectName JournalName
        {
            get { return journalName_; }
            set { journalName_ = value;  }
        }
        
                
          
	private RangeStartSpecificationChoiceType rangeStartSpecification_ ;
	
        private bool  rangeStartSpecification_present = false ;
	

    [ASN1PreparedElement]    
    [ASN1Choice ( Name = "rangeStartSpecification" )]
    public class RangeStartSpecificationChoiceType : IASN1PreparedElement  {
	            
        
	private TimeOfDay startingTime_ ;
        private bool  startingTime_selected = false ;
        
                
        
        [ASN1Element ( Name = "startingTime", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public TimeOfDay StartingTime
        {
            get { return startingTime_; }
            set { selectStartingTime(value); }
        }
        
                
          
        
	private byte[] startingEntry_ ;
        private bool  startingEntry_selected = false ;
        
                
        [ASN1OctetString( Name = "" )]
    
        [ASN1Element ( Name = "startingEntry", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public byte[] StartingEntry
        {
            get { return startingEntry_; }
            set { selectStartingEntry(value); }
        }
        
                
          
        public bool isStartingTimeSelected () {
            return this.startingTime_selected ;
        }

        


        public void selectStartingTime (TimeOfDay val) {
            this.startingTime_ = val;
            this.startingTime_selected = true;
            
            
                    this.startingEntry_selected = false;
                            
        }
        
          
        public bool isStartingEntrySelected () {
            return this.startingEntry_selected ;
        }

        


        public void selectStartingEntry (byte[] val) {
            this.startingEntry_ = val;
            this.startingEntry_selected = true;
            
            
                    this.startingTime_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(RangeStartSpecificationChoiceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
                
        [ASN1Element ( Name = "rangeStartSpecification", IsOptional =  true , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public RangeStartSpecificationChoiceType RangeStartSpecification
        {
            get { return rangeStartSpecification_; }
            set { rangeStartSpecification_ = value; rangeStartSpecification_present = true;  }
        }
        
                
          
	private RangeStopSpecificationChoiceType rangeStopSpecification_ ;
	
        private bool  rangeStopSpecification_present = false ;
	

    [ASN1PreparedElement]    
    [ASN1Choice ( Name = "rangeStopSpecification" )]
    public class RangeStopSpecificationChoiceType : IASN1PreparedElement  {
	            
        
	private TimeOfDay endingTime_ ;
        private bool  endingTime_selected = false ;
        
                
        
        [ASN1Element ( Name = "endingTime", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public TimeOfDay EndingTime
        {
            get { return endingTime_; }
            set { selectEndingTime(value); }
        }
        
                
          
        
	private Integer32 numberOfEntries_ ;
        private bool  numberOfEntries_selected = false ;
        
                
        
        [ASN1Element ( Name = "numberOfEntries", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public Integer32 NumberOfEntries
        {
            get { return numberOfEntries_; }
            set { selectNumberOfEntries(value); }
        }
        
                
          
        public bool isEndingTimeSelected () {
            return this.endingTime_selected ;
        }

        


        public void selectEndingTime (TimeOfDay val) {
            this.endingTime_ = val;
            this.endingTime_selected = true;
            
            
                    this.numberOfEntries_selected = false;
                            
        }
        
          
        public bool isNumberOfEntriesSelected () {
            return this.numberOfEntries_selected ;
        }

        


        public void selectNumberOfEntries (Integer32 val) {
            this.numberOfEntries_ = val;
            this.numberOfEntries_selected = true;
            
            
                    this.endingTime_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(RangeStopSpecificationChoiceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
                
        [ASN1Element ( Name = "rangeStopSpecification", IsOptional =  true , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public RangeStopSpecificationChoiceType RangeStopSpecification
        {
            get { return rangeStopSpecification_; }
            set { rangeStopSpecification_ = value; rangeStopSpecification_present = true;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<string> listOfVariables_ ;
	
        private bool  listOfVariables_present = false ;
	[ASN1String( Name = "", 
        StringType =  UniversalTags.VisibleString , IsUCS = false )]
[ASN1SequenceOf( Name = "listOfVariables", IsSetOf = false  )]

    
        [ASN1Element ( Name = "listOfVariables", IsOptional =  true , HasTag =  true, Tag = 4 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<string> ListOfVariables
        {
            get { return listOfVariables_; }
            set { listOfVariables_ = value; listOfVariables_present = true;  }
        }
        
                
          
	private EntryToStartAfterSequenceType entryToStartAfter_ ;
	
        private bool  entryToStartAfter_present = false ;
	
       [ASN1PreparedElement]
       [ASN1Sequence ( Name = "entryToStartAfter", IsSet = false  )]
       public class EntryToStartAfterSequenceType : IASN1PreparedElement {
                        
	private TimeOfDay timeSpecification_ ;
	
        [ASN1Element ( Name = "timeSpecification", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public TimeOfDay TimeSpecification
        {
            get { return timeSpecification_; }
            set { timeSpecification_ = value;  }
        }
        
                
          
	private byte[] entrySpecification_ ;
	[ASN1OctetString( Name = "" )]
    
        [ASN1Element ( Name = "entrySpecification", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public byte[] EntrySpecification
        {
            get { return entrySpecification_; }
            set { entrySpecification_ = value;  }
        }
        
                
  
                
                public void initWithDefaults() {
            		
                }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(EntryToStartAfterSequenceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

                
       }
                
        [ASN1Element ( Name = "entryToStartAfter", IsOptional =  true , HasTag =  true, Tag = 5 , HasDefaultValue =  false )  ]
    
        public EntryToStartAfterSequenceType EntryToStartAfter
        {
            get { return entryToStartAfter_; }
            set { entryToStartAfter_ = value; entryToStartAfter_present = true;  }
        }
        
                
  
        public bool isRangeStartSpecificationPresent () {
            return this.rangeStartSpecification_present == true;
        }
        
        public bool isRangeStopSpecificationPresent () {
            return this.rangeStopSpecification_present == true;
        }
        
        public bool isListOfVariablesPresent () {
            return this.listOfVariables_present == true;
        }
        
        public bool isEntryToStartAfterPresent () {
            return this.entryToStartAfter_present == true;
        }
        

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ReadJournal_Request));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
