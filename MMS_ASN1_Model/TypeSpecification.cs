
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Choice ( Name = "TypeSpecification") ]
    public class TypeSpecification : IASN1PreparedElement {
                    
        
	private ObjectName typeName_ ;
        private bool  typeName_selected = false ;
        
                
        
        [ASN1Element ( Name = "typeName", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public ObjectName TypeName
        {
            get { return typeName_; }
            set { selectTypeName(value); }
        }
        
                
          
        
	private TypeDescription typeDescription_ ;
        private bool  typeDescription_selected = false ;
        
                
        
        [ASN1Element ( Name = "typeDescription", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public TypeDescription TypeDescription
        {
            get { return typeDescription_; }
            set { selectTypeDescription(value); }
        }
        
                
          
        public bool isTypeNameSelected () {
            return this.typeName_selected ;
        }

        


        public void selectTypeName (ObjectName val) {
            this.typeName_ = val;
            this.typeName_selected = true;
            
            
                    this.typeDescription_selected = false;
                            
        }
        
          
        public bool isTypeDescriptionSelected () {
            return this.typeDescription_selected ;
        }

        


        public void selectTypeDescription (TypeDescription val) {
            this.typeDescription_ = val;
            this.typeDescription_selected = true;
            
            
                    this.typeName_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(TypeSpecification));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
            
}
