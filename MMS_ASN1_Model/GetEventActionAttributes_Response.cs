
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model
{


    [ASN1PreparedElement]
    [ASN1Sequence(Name = "GetEventActionAttributes_Response", IsSet = false)]
    public class GetEventActionAttributes_Response : IASN1PreparedElement
    {

        private bool mmsDeletable_;
        [ASN1Boolean(Name = "")]

        [ASN1Element(Name = "mmsDeletable", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = true)]

        public bool MmsDeletable
        {
            get { return mmsDeletable_; }
            set { mmsDeletable_ = value; }
        }



        private System.Collections.Generic.ICollection<Modifier> listOfModifier_;

        [ASN1SequenceOf(Name = "listOfModifier", IsSetOf = false)]


        [ASN1Element(Name = "listOfModifier", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]

        public System.Collections.Generic.ICollection<Modifier> ListOfModifier
        {
            get { return listOfModifier_; }
            set { listOfModifier_ = value; }
        }



        private ConfirmedServiceRequest confirmedServiceRequest_;

        [ASN1Element(Name = "confirmedServiceRequest", IsOptional = false, HasTag = true, Tag = 2, HasDefaultValue = false)]

        public ConfirmedServiceRequest ConfirmedServiceRequest
        {
            get { return confirmedServiceRequest_; }
            set { confirmedServiceRequest_ = value; }
        }



        private Request_Detail cs_extension_;

        private bool cs_extension_present = false;

        [ASN1Element(Name = "cs-extension", IsOptional = true, HasTag = true, Tag = 79, HasDefaultValue = false)]

        public Request_Detail Cs_extension
        {
            get { return cs_extension_; }
            set { cs_extension_ = value; cs_extension_present = true; }
        }



        private Identifier accessControlList_;

        private bool accessControlList_present = false;

        [ASN1Element(Name = "accessControlList", IsOptional = true, HasTag = true, Tag = 3, HasDefaultValue = false)]

        public Identifier AccessControlList
        {
            get { return accessControlList_; }
            set { accessControlList_ = value; accessControlList_present = true; }
        }



        public bool isCs_extensionPresent()
        {
            return this.cs_extension_present == true;
        }

        public bool isAccessControlListPresent()
        {
            return this.accessControlList_present == true;
        }


        public void initWithDefaults()
        {
            bool param_MmsDeletable =
        false;
            MmsDeletable = param_MmsDeletable;

        }


        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(GetEventActionAttributes_Response));
        public IASN1PreparedElementData PreparedData
        {
            get { return preparedData; }
        }


    }

}
