
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "InitializeJournal_Request", IsSet = false  )]
    public class InitializeJournal_Request : IASN1PreparedElement {
                    
	private ObjectName journalName_ ;
	
        [ASN1Element ( Name = "journalName", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public ObjectName JournalName
        {
            get { return journalName_; }
            set { journalName_ = value;  }
        }
        
                
          
	private LimitSpecificationSequenceType limitSpecification_ ;
	
        private bool  limitSpecification_present = false ;
	
       [ASN1PreparedElement]
       [ASN1Sequence ( Name = "limitSpecification", IsSet = false  )]
       public class LimitSpecificationSequenceType : IASN1PreparedElement {
                        
	private TimeOfDay limitingTime_ ;
	
        [ASN1Element ( Name = "limitingTime", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public TimeOfDay LimitingTime
        {
            get { return limitingTime_; }
            set { limitingTime_ = value;  }
        }
        
                
          
	private byte[] limitingEntry_ ;
	
        private bool  limitingEntry_present = false ;
	[ASN1OctetString( Name = "" )]
    
        [ASN1Element ( Name = "limitingEntry", IsOptional =  true , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public byte[] LimitingEntry
        {
            get { return limitingEntry_; }
            set { limitingEntry_ = value; limitingEntry_present = true;  }
        }
        
                
  
        public bool isLimitingEntryPresent () {
            return this.limitingEntry_present == true;
        }
        
                
                public void initWithDefaults() {
            		
                }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(LimitSpecificationSequenceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

                
       }
                
        [ASN1Element ( Name = "limitSpecification", IsOptional =  true , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public LimitSpecificationSequenceType LimitSpecification
        {
            get { return limitSpecification_; }
            set { limitSpecification_ = value; limitSpecification_present = true;  }
        }
        
                
  
        public bool isLimitSpecificationPresent () {
            return this.limitSpecification_present == true;
        }
        

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(InitializeJournal_Request));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
