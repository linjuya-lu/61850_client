
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "ReportSemaphoreEntryStatus_Request", IsSet = false  )]
    public class ReportSemaphoreEntryStatus_Request : IASN1PreparedElement {
                    
	private ObjectName semaphoreName_ ;
	
        [ASN1Element ( Name = "semaphoreName", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public ObjectName SemaphoreName
        {
            get { return semaphoreName_; }
            set { semaphoreName_ = value;  }
        }
        
                
          
	private long state_ ;
	[ASN1Integer( Name = "" )]
    
        [ASN1Element ( Name = "state", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public long State
        {
            get { return state_; }
            set { state_ = value;  }
        }
        
                
          
	private byte[] entryIDToStartAfter_ ;
	
        private bool  entryIDToStartAfter_present = false ;
	[ASN1OctetString( Name = "" )]
    
        [ASN1Element ( Name = "entryIDToStartAfter", IsOptional =  true , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public byte[] EntryIDToStartAfter
        {
            get { return entryIDToStartAfter_; }
            set { entryIDToStartAfter_ = value; entryIDToStartAfter_present = true;  }
        }
        
                
  
        public bool isEntryIDToStartAfterPresent () {
            return this.entryIDToStartAfter_present == true;
        }
        

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ReportSemaphoreEntryStatus_Request));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
