
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "GeneralManagementParameters", IsSet = false  )]
    public class GeneralManagementParameters : IASN1PreparedElement {
                    
	private MMSString localDetail_ ;
	
        [ASN1Element ( Name = "localDetail", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public MMSString LocalDetail
        {
            get { return localDetail_; }
            set { localDetail_ = value;  }
        }
        
                
          
	private SupportForTimeSequenceType supportForTime_ ;
	
       [ASN1PreparedElement]
       [ASN1Sequence ( Name = "supportForTime", IsSet = false  )]
       public class SupportForTimeSequenceType : IASN1PreparedElement {
                        
	private bool timeOfDay_ ;
	[ASN1Boolean( Name = "" )]
    
        [ASN1Element ( Name = "timeOfDay", IsOptional =  false , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public bool TimeOfDay
        {
            get { return timeOfDay_; }
            set { timeOfDay_ = value;  }
        }
        
                
          
	private bool timeSequence_ ;
	[ASN1Boolean( Name = "" )]
    
        [ASN1Element ( Name = "timeSequence", IsOptional =  false , HasTag =  true, Tag = 3 , HasDefaultValue =  false )  ]
    
        public bool TimeSequence
        {
            get { return timeSequence_; }
            set { timeSequence_ = value;  }
        }
        
                
  
                
                public void initWithDefaults() {
            		
                }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(SupportForTimeSequenceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

                
       }
                
        [ASN1Element ( Name = "supportForTime", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public SupportForTimeSequenceType SupportForTime
        {
            get { return supportForTime_; }
            set { supportForTime_ = value;  }
        }
        
                
          
	private long granularityOfTime_ ;
	[ASN1Integer( Name = "" )]
    
        [ASN1Element ( Name = "granularityOfTime", IsOptional =  false , HasTag =  true, Tag = 4 , HasDefaultValue =  false )  ]
    
        public long GranularityOfTime
        {
            get { return granularityOfTime_; }
            set { granularityOfTime_ = value;  }
        }
        
                
  

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(GeneralManagementParameters));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
