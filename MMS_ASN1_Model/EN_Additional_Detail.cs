
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1BoxedType ( Name = "EN_Additional_Detail") ]
    public class EN_Additional_Detail: IASN1PreparedElement {
            
           
        private EN_Additional_DetailChoiceType  val;

        

    [ASN1PreparedElement]    
    [ASN1Choice ( Name = "EN-Additional-Detail" )]
    public class EN_Additional_DetailChoiceType : IASN1PreparedElement  {
	            
        
	private string string_ ;
        private bool  string_selected = false ;
        
                
        [ASN1String( Name = "", 
        StringType =  UniversalTags.VisibleString , IsUCS = false )]
        [ASN1Element ( Name = "string", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public string String
        {
            get { return string_; }
            set { selectString(value); }
        }
        
                
          
        
	private long index_ ;
        private bool  index_selected = false ;
        
                
        [ASN1Integer( Name = "" )]
    
        [ASN1Element ( Name = "index", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public long Index
        {
            get { return index_; }
            set { selectIndex(value); }
        }
        
                
          
        
	private NullObject noEnhancement_ ;
        private bool  noEnhancement_selected = false ;
        
                
        
        [ASN1Null ( Name = "noEnhancement" )]
    
        [ASN1Element ( Name = "noEnhancement", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public NullObject NoEnhancement
        {
            get { return noEnhancement_; }
            set { selectNoEnhancement(value); }
        }
        
                
          
        public bool isStringSelected () {
            return this.string_selected ;
        }

        


        public void selectString (string val) {
            this.string_ = val;
            this.string_selected = true;
            
            
                    this.index_selected = false;
                
                    this.noEnhancement_selected = false;
                            
        }
        
          
        public bool isIndexSelected () {
            return this.index_selected ;
        }

        


        public void selectIndex (long val) {
            this.index_ = val;
            this.index_selected = true;
            
            
                    this.string_selected = false;
                
                    this.noEnhancement_selected = false;
                            
        }
        
          
        public bool isNoEnhancementSelected () {
            return this.noEnhancement_selected ;
        }

        
        public void selectNoEnhancement () {
            selectNoEnhancement (new NullObject());
	}
	


        public void selectNoEnhancement (NullObject val) {
            this.noEnhancement_ = val;
            this.noEnhancement_selected = true;
            
            
                    this.string_selected = false;
                
                    this.index_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(EN_Additional_DetailChoiceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
                
        [ASN1Element ( Name = "EN-Additional-Detail", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public EN_Additional_DetailChoiceType Value
        {
                get { return val; }        
                    
                set { val = value; }
                        
        }            

                    
        
        public EN_Additional_Detail ()
        {
        }

            public void initWithDefaults()
	    {
	    }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(EN_Additional_Detail));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

        
    }
            
}
