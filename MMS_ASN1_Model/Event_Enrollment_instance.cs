
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "Event_Enrollment_instance", IsSet = false  )]
    public class Event_Enrollment_instance : IASN1PreparedElement {
                    
	private ObjectName name_ ;
	
        [ASN1Element ( Name = "name", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public ObjectName Name
        {
            get { return name_; }
            set { name_ = value;  }
        }
        
                
          
	private DefinitionChoiceType definition_ ;
	

    [ASN1PreparedElement]    
    [ASN1Choice ( Name = "definition" )]
    public class DefinitionChoiceType : IASN1PreparedElement  {
	            
        
	private ObjectIdentifier reference_ ;
        private bool  reference_selected = false ;
        
                
        [ASN1ObjectIdentifier( Name = "" )]
    
        [ASN1Element ( Name = "reference", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public ObjectIdentifier Reference
        {
            get { return reference_; }
            set { selectReference(value); }
        }
        
                
          
        
	private DetailsSequenceType details_ ;
        private bool  details_selected = false ;
        
                
        
       [ASN1PreparedElement]
       [ASN1Sequence ( Name = "details", IsSet = false  )]
       public class DetailsSequenceType : IASN1PreparedElement {
                        
	private Access_Control_List_instance accessControl_ ;
	
        [ASN1Element ( Name = "accessControl", IsOptional =  false , HasTag =  true, Tag = 3 , HasDefaultValue =  false )  ]
    
        public Access_Control_List_instance AccessControl
        {
            get { return accessControl_; }
            set { accessControl_ = value;  }
        }
        
                
          
	private EE_Class eeClass_ ;
	
        [ASN1Element ( Name = "eeClass", IsOptional =  false , HasTag =  true, Tag = 4 , HasDefaultValue =  false )  ]
    
        public EE_Class EeClass
        {
            get { return eeClass_; }
            set { eeClass_ = value;  }
        }
        
                
          
	private Event_Condition_instance eventCondition_ ;
	
        [ASN1Element ( Name = "eventCondition", IsOptional =  false , HasTag =  true, Tag = 5 , HasDefaultValue =  false )  ]
    
        public Event_Condition_instance EventCondition
        {
            get { return eventCondition_; }
            set { eventCondition_ = value;  }
        }
        
                
          
	private Transitions ecTransitions_ ;
	
        [ASN1Element ( Name = "ecTransitions", IsOptional =  false , HasTag =  true, Tag = 6 , HasDefaultValue =  false )  ]
    
        public Transitions EcTransitions
        {
            get { return ecTransitions_; }
            set { ecTransitions_ = value;  }
        }
        
                
          
	private RemainingDelayChoiceType remainingDelay_ ;
	
        private bool  remainingDelay_present = false ;
	

    [ASN1PreparedElement]    
    [ASN1Choice ( Name = "remainingDelay" )]
    public class RemainingDelayChoiceType : IASN1PreparedElement  {
	            
        
	private long time_ ;
        private bool  time_selected = false ;
        
                
        [ASN1Integer( Name = "" )]
    
        [ASN1Element ( Name = "time", IsOptional =  false , HasTag =  true, Tag = 7 , HasDefaultValue =  false )  ]
    
        public long Time
        {
            get { return time_; }
            set { selectTime(value); }
        }
        
                
          
        
	private NullObject forever_ ;
        private bool  forever_selected = false ;
        
                
        
        [ASN1Null ( Name = "forever" )]
    
        [ASN1Element ( Name = "forever", IsOptional =  false , HasTag =  true, Tag = 8 , HasDefaultValue =  false )  ]
    
        public NullObject Forever
        {
            get { return forever_; }
            set { selectForever(value); }
        }
        
                
          
        public bool isTimeSelected () {
            return this.time_selected ;
        }

        


        public void selectTime (long val) {
            this.time_ = val;
            this.time_selected = true;
            
            
                    this.forever_selected = false;
                            
        }
        
          
        public bool isForeverSelected () {
            return this.forever_selected ;
        }

        
        public void selectForever () {
            selectForever (new NullObject());
	}
	


        public void selectForever (NullObject val) {
            this.forever_ = val;
            this.forever_selected = true;
            
            
                    this.time_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(RemainingDelayChoiceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
                
        [ASN1Element ( Name = "remainingDelay", IsOptional =  true , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public RemainingDelayChoiceType RemainingDelay
        {
            get { return remainingDelay_; }
            set { remainingDelay_ = value; remainingDelay_present = true;  }
        }
        
                
          
	private Event_Action_instance eventAction_ ;
	
        private bool  eventAction_present = false ;
	
        [ASN1Element ( Name = "eventAction", IsOptional =  true , HasTag =  true, Tag = 9 , HasDefaultValue =  false )  ]
    
        public Event_Action_instance EventAction
        {
            get { return eventAction_; }
            set { eventAction_ = value; eventAction_present = true;  }
        }
        
                
          
	private EE_Duration duration_ ;
	
        private bool  duration_present = false ;
	
        [ASN1Element ( Name = "duration", IsOptional =  true , HasTag =  true, Tag = 10 , HasDefaultValue =  false )  ]
    
        public EE_Duration Duration
        {
            get { return duration_; }
            set { duration_ = value; duration_present = true;  }
        }
        
                
          
	private ApplicationReference clientApplication_ ;
	
        private bool  clientApplication_present = false ;
	
        [ASN1Element ( Name = "clientApplication", IsOptional =  true , HasTag =  true, Tag = 11 , HasDefaultValue =  false )  ]
    
        public ApplicationReference ClientApplication
        {
            get { return clientApplication_; }
            set { clientApplication_ = value; clientApplication_present = true;  }
        }
        
                
          
	private AlarmAckRule aaRule_ ;
	
        private bool  aaRule_present = false ;
	
        [ASN1Element ( Name = "aaRule", IsOptional =  true , HasTag =  true, Tag = 12 , HasDefaultValue =  false )  ]
    
        public AlarmAckRule AaRule
        {
            get { return aaRule_; }
            set { aaRule_ = value; aaRule_present = true;  }
        }
        
                
          
	private DisplayEnhancementChoiceType displayEnhancement_ ;
	

    [ASN1PreparedElement]    
    [ASN1Choice ( Name = "displayEnhancement" )]
    public class DisplayEnhancementChoiceType : IASN1PreparedElement  {
	            
        
	private MMSString text_ ;
        private bool  text_selected = false ;
        
                
        
        [ASN1Element ( Name = "text", IsOptional =  false , HasTag =  true, Tag = 13 , HasDefaultValue =  false )  ]
    
        public MMSString Text
        {
            get { return text_; }
            set { selectText(value); }
        }
        
                
          
        
	private long number_ ;
        private bool  number_selected = false ;
        
                
        [ASN1Integer( Name = "" )]
    
        [ASN1Element ( Name = "number", IsOptional =  false , HasTag =  true, Tag = 14 , HasDefaultValue =  false )  ]
    
        public long Number
        {
            get { return number_; }
            set { selectNumber(value); }
        }
        
                
          
        
	private NullObject none_ ;
        private bool  none_selected = false ;
        
                
        
        [ASN1Null ( Name = "none" )]
    
        [ASN1Element ( Name = "none", IsOptional =  false , HasTag =  true, Tag = 15 , HasDefaultValue =  false )  ]
    
        public NullObject None
        {
            get { return none_; }
            set { selectNone(value); }
        }
        
                
          
        public bool isTextSelected () {
            return this.text_selected ;
        }

        


        public void selectText (MMSString val) {
            this.text_ = val;
            this.text_selected = true;
            
            
                    this.number_selected = false;
                
                    this.none_selected = false;
                            
        }
        
          
        public bool isNumberSelected () {
            return this.number_selected ;
        }

        


        public void selectNumber (long val) {
            this.number_ = val;
            this.number_selected = true;
            
            
                    this.text_selected = false;
                
                    this.none_selected = false;
                            
        }
        
          
        public bool isNoneSelected () {
            return this.none_selected ;
        }

        
        public void selectNone () {
            selectNone (new NullObject());
	}
	


        public void selectNone (NullObject val) {
            this.none_ = val;
            this.none_selected = true;
            
            
                    this.text_selected = false;
                
                    this.number_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(DisplayEnhancementChoiceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
                
        [ASN1Element ( Name = "displayEnhancement", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public DisplayEnhancementChoiceType DisplayEnhancement
        {
            get { return displayEnhancement_; }
            set { displayEnhancement_ = value;  }
        }
        
                
  
        public bool isRemainingDelayPresent () {
            return this.remainingDelay_present == true;
        }
        
        public bool isEventActionPresent () {
            return this.eventAction_present == true;
        }
        
        public bool isDurationPresent () {
            return this.duration_present == true;
        }
        
        public bool isClientApplicationPresent () {
            return this.clientApplication_present == true;
        }
        
        public bool isAaRulePresent () {
            return this.aaRule_present == true;
        }
        
                
                public void initWithDefaults() {
            		
                }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(DetailsSequenceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

                
       }
                
        [ASN1Element ( Name = "details", IsOptional =  false , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public DetailsSequenceType Details
        {
            get { return details_; }
            set { selectDetails(value); }
        }
        
                
          
        public bool isReferenceSelected () {
            return this.reference_selected ;
        }

        


        public void selectReference (ObjectIdentifier val) {
            this.reference_ = val;
            this.reference_selected = true;
            
            
                    this.details_selected = false;
                            
        }
        
          
        public bool isDetailsSelected () {
            return this.details_selected ;
        }

        


        public void selectDetails (DetailsSequenceType val) {
            this.details_ = val;
            this.details_selected = true;
            
            
                    this.reference_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(DefinitionChoiceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
                
        [ASN1Element ( Name = "definition", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public DefinitionChoiceType Definition
        {
            get { return definition_; }
            set { definition_ = value;  }
        }
        
                
  

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(Event_Enrollment_instance));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
