
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "GetEventEnrollmentAttributes_Request", IsSet = false  )]
    public class GetEventEnrollmentAttributes_Request : IASN1PreparedElement {
                    
	private long scopeOfRequest_ ;
	[ASN1Integer( Name = "" )]
    
        [ASN1Element ( Name = "scopeOfRequest", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  true )  ]
    
        public long ScopeOfRequest
        {
            get { return scopeOfRequest_; }
            set { scopeOfRequest_ = value;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<ObjectName> eventEnrollmentNames_ ;
	
        private bool  eventEnrollmentNames_present = false ;
	
[ASN1SequenceOf( Name = "eventEnrollmentNames", IsSetOf = false  )]

    
        [ASN1Element ( Name = "eventEnrollmentNames", IsOptional =  true , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<ObjectName> EventEnrollmentNames
        {
            get { return eventEnrollmentNames_; }
            set { eventEnrollmentNames_ = value; eventEnrollmentNames_present = true;  }
        }
        
                
          
	private ApplicationReference clientApplication_ ;
	
        private bool  clientApplication_present = false ;
	
        [ASN1Element ( Name = "clientApplication", IsOptional =  true , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public ApplicationReference ClientApplication
        {
            get { return clientApplication_; }
            set { clientApplication_ = value; clientApplication_present = true;  }
        }
        
                
          
	private ObjectName eventConditionName_ ;
	
        private bool  eventConditionName_present = false ;
	
        [ASN1Element ( Name = "eventConditionName", IsOptional =  true , HasTag =  true, Tag = 3 , HasDefaultValue =  false )  ]
    
        public ObjectName EventConditionName
        {
            get { return eventConditionName_; }
            set { eventConditionName_ = value; eventConditionName_present = true;  }
        }
        
                
          
	private ObjectName eventActionName_ ;
	
        private bool  eventActionName_present = false ;
	
        [ASN1Element ( Name = "eventActionName", IsOptional =  true , HasTag =  true, Tag = 4 , HasDefaultValue =  false )  ]
    
        public ObjectName EventActionName
        {
            get { return eventActionName_; }
            set { eventActionName_ = value; eventActionName_present = true;  }
        }
        
                
          
	private ObjectName continueAfter_ ;
	
        private bool  continueAfter_present = false ;
	
        [ASN1Element ( Name = "continueAfter", IsOptional =  true , HasTag =  true, Tag = 5 , HasDefaultValue =  false )  ]
    
        public ObjectName ContinueAfter
        {
            get { return continueAfter_; }
            set { continueAfter_ = value; continueAfter_present = true;  }
        }
        
                
  
        public bool isEventEnrollmentNamesPresent () {
            return this.eventEnrollmentNames_present == true;
        }
        
        public bool isClientApplicationPresent () {
            return this.clientApplication_present == true;
        }
        
        public bool isEventConditionNamePresent () {
            return this.eventConditionName_present == true;
        }
        
        public bool isEventActionNamePresent () {
            return this.eventActionName_present == true;
        }
        
        public bool isContinueAfterPresent () {
            return this.continueAfter_present == true;
        }
        

            public void initWithDefaults() {
            	long param_ScopeOfRequest = 0        
            ;
        ScopeOfRequest = param_ScopeOfRequest;
    
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(GetEventEnrollmentAttributes_Request));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
