
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Choice ( Name = "Modifier") ]
    public class Modifier : IASN1PreparedElement {
                    
        
	private AttachToEventCondition eventModifier_ ;
        private bool  eventModifier_selected = false ;
        
                
        
        [ASN1Element ( Name = "eventModifier", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public AttachToEventCondition EventModifier
        {
            get { return eventModifier_; }
            set { selectEventModifier(value); }
        }
        
                
          
        
	private AttachToSemaphore semaphoreModifier_ ;
        private bool  semaphoreModifier_selected = false ;
        
                
        
        [ASN1Element ( Name = "semaphoreModifier", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public AttachToSemaphore SemaphoreModifier
        {
            get { return semaphoreModifier_; }
            set { selectSemaphoreModifier(value); }
        }
        
                
          
        public bool isEventModifierSelected () {
            return this.eventModifier_selected ;
        }

        


        public void selectEventModifier (AttachToEventCondition val) {
            this.eventModifier_ = val;
            this.eventModifier_selected = true;
            
            
                    this.semaphoreModifier_selected = false;
                            
        }
        
          
        public bool isSemaphoreModifierSelected () {
            return this.semaphoreModifier_selected ;
        }

        


        public void selectSemaphoreModifier (AttachToSemaphore val) {
            this.semaphoreModifier_ = val;
            this.semaphoreModifier_selected = true;
            
            
                    this.eventModifier_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(Modifier));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
            
}
