
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Choice ( Name = "Address") ]
    public class Address : IASN1PreparedElement {
                    
        
	private Unsigned32 numericAddress_ ;
        private bool  numericAddress_selected = false ;
        
                
        
        [ASN1Element ( Name = "numericAddress", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public Unsigned32 NumericAddress
        {
            get { return numericAddress_; }
            set { selectNumericAddress(value); }
        }
        
                
          
        
	private MMSString symbolicAddress_ ;
        private bool  symbolicAddress_selected = false ;
        
                
        
        [ASN1Element ( Name = "symbolicAddress", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public MMSString SymbolicAddress
        {
            get { return symbolicAddress_; }
            set { selectSymbolicAddress(value); }
        }
        
                
          
        
	private byte[] unconstrainedAddress_ ;
        private bool  unconstrainedAddress_selected = false ;
        
                
        [ASN1OctetString( Name = "" )]
    
        [ASN1Element ( Name = "unconstrainedAddress", IsOptional =  false , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public byte[] UnconstrainedAddress
        {
            get { return unconstrainedAddress_; }
            set { selectUnconstrainedAddress(value); }
        }
        
                
          
        public bool isNumericAddressSelected () {
            return this.numericAddress_selected ;
        }

        


        public void selectNumericAddress (Unsigned32 val) {
            this.numericAddress_ = val;
            this.numericAddress_selected = true;
            
            
                    this.symbolicAddress_selected = false;
                
                    this.unconstrainedAddress_selected = false;
                            
        }
        
          
        public bool isSymbolicAddressSelected () {
            return this.symbolicAddress_selected ;
        }

        


        public void selectSymbolicAddress (MMSString val) {
            this.symbolicAddress_ = val;
            this.symbolicAddress_selected = true;
            
            
                    this.numericAddress_selected = false;
                
                    this.unconstrainedAddress_selected = false;
                            
        }
        
          
        public bool isUnconstrainedAddressSelected () {
            return this.unconstrainedAddress_selected ;
        }

        


        public void selectUnconstrainedAddress (byte[] val) {
            this.unconstrainedAddress_ = val;
            this.unconstrainedAddress_selected = true;
            
            
                    this.numericAddress_selected = false;
                
                    this.symbolicAddress_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(Address));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
            
}
