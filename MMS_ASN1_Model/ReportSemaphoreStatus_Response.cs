
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "ReportSemaphoreStatus_Response", IsSet = false  )]
    public class ReportSemaphoreStatus_Response : IASN1PreparedElement {
                    
	private bool mmsDeletable_ ;
	[ASN1Boolean( Name = "" )]
    
        [ASN1Element ( Name = "mmsDeletable", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public bool MmsDeletable
        {
            get { return mmsDeletable_; }
            set { mmsDeletable_ = value;  }
        }
        
                
          
	private long class__ ;
	[ASN1Integer( Name = "" )]
    
        [ASN1Element ( Name = "class", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public long Class_
        {
            get { return class__; }
            set { class__ = value;  }
        }
        
                
          
	private Unsigned16 numberOfTokens_ ;
	
        [ASN1Element ( Name = "numberOfTokens", IsOptional =  false , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public Unsigned16 NumberOfTokens
        {
            get { return numberOfTokens_; }
            set { numberOfTokens_ = value;  }
        }
        
                
          
	private Unsigned16 numberOfOwnedTokens_ ;
	
        [ASN1Element ( Name = "numberOfOwnedTokens", IsOptional =  false , HasTag =  true, Tag = 3 , HasDefaultValue =  false )  ]
    
        public Unsigned16 NumberOfOwnedTokens
        {
            get { return numberOfOwnedTokens_; }
            set { numberOfOwnedTokens_ = value;  }
        }
        
                
          
	private Unsigned16 numberOfHungTokens_ ;
	
        [ASN1Element ( Name = "numberOfHungTokens", IsOptional =  false , HasTag =  true, Tag = 4 , HasDefaultValue =  false )  ]
    
        public Unsigned16 NumberOfHungTokens
        {
            get { return numberOfHungTokens_; }
            set { numberOfHungTokens_ = value;  }
        }
        
                
          
	private Identifier accessControlList_ ;
	
        private bool  accessControlList_present = false ;
	
        [ASN1Element ( Name = "accessControlList", IsOptional =  true , HasTag =  true, Tag = 5 , HasDefaultValue =  false )  ]
    
        public Identifier AccessControlList
        {
            get { return accessControlList_; }
            set { accessControlList_ = value; accessControlList_present = true;  }
        }
        
                
  
        public bool isAccessControlListPresent () {
            return this.accessControlList_present == true;
        }
        

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ReportSemaphoreStatus_Response));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
