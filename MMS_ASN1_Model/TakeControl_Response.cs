
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Choice ( Name = "TakeControl_Response") ]
    public class TakeControl_Response : IASN1PreparedElement {
                    
        
	private NullObject noResult_ ;
        private bool  noResult_selected = false ;
        
                
        
        [ASN1Null ( Name = "noResult" )]
    
        [ASN1Element ( Name = "noResult", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public NullObject NoResult
        {
            get { return noResult_; }
            set { selectNoResult(value); }
        }
        
                
          
        
	private Identifier namedToken_ ;
        private bool  namedToken_selected = false ;
        
                
        
        [ASN1Element ( Name = "namedToken", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public Identifier NamedToken
        {
            get { return namedToken_; }
            set { selectNamedToken(value); }
        }
        
                
          
        public bool isNoResultSelected () {
            return this.noResult_selected ;
        }

        
        public void selectNoResult () {
            selectNoResult (new NullObject());
	}
	


        public void selectNoResult (NullObject val) {
            this.noResult_ = val;
            this.noResult_selected = true;
            
            
                    this.namedToken_selected = false;
                            
        }
        
          
        public bool isNamedTokenSelected () {
            return this.namedToken_selected ;
        }

        


        public void selectNamedToken (Identifier val) {
            this.namedToken_ = val;
            this.namedToken_selected = true;
            
            
                    this.noResult_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(TakeControl_Response));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
            
}
