
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "Select_Request", IsSet = false  )]
    public class Select_Request : IASN1PreparedElement {
                    
	private Identifier controlling_ ;
	
        private bool  controlling_present = false ;
	
        [ASN1Element ( Name = "controlling", IsOptional =  true , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public Identifier Controlling
        {
            get { return controlling_; }
            set { controlling_ = value; controlling_present = true;  }
        }
        
                
          
	private System.Collections.Generic.ICollection<Identifier> controlled_ ;
	
        private bool  controlled_present = false ;
	
[ASN1SequenceOf( Name = "controlled", IsSetOf = false  )]

    
        [ASN1Element ( Name = "controlled", IsOptional =  true , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public System.Collections.Generic.ICollection<Identifier> Controlled
        {
            get { return controlled_; }
            set { controlled_ = value; controlled_present = true;  }
        }
        
                
  
        public bool isControllingPresent () {
            return this.controlling_present == true;
        }
        
        public bool isControlledPresent () {
            return this.controlled_present == true;
        }
        

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(Select_Request));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
