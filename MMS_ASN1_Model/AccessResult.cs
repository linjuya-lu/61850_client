
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model
{


    [ASN1PreparedElement]
    [ASN1Choice(Name = "AccessResult")]
    public class AccessResult : IASN1PreparedElement
    {


        private DataAccessError failure_;
        private bool failure_selected = false;



        [ASN1Element(Name = "failure", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]

        public DataAccessError Failure
        {
            get { return failure_; }
            set { selectFailure(value); }
        }




        private Data success_;
        private bool success_selected = false;



        [ASN1Element(Name = "success", IsOptional = false, HasTag = false, HasDefaultValue = false)]

        public Data Success
        {
            get { return success_; }
            set { selectSuccess(value); }
        }



        public bool isFailureSelected()
        {
            return this.failure_selected;
        }




        public void selectFailure(DataAccessError val)
        {
            this.failure_ = val;
            this.failure_selected = true;


            this.success_selected = false;

        }


        public bool isSuccessSelected()
        {
            return this.success_selected;
        }




        public void selectSuccess(Data val)
        {
            this.success_ = val;
            this.success_selected = true;


            this.failure_selected = false;

        }



        public void initWithDefaults()
        {
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(AccessResult));
        public IASN1PreparedElementData PreparedData
        {
            get { return preparedData; }
        }

    }

}
