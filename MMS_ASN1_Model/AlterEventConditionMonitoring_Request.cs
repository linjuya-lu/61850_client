
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "AlterEventConditionMonitoring_Request", IsSet = false  )]
    public class AlterEventConditionMonitoring_Request : IASN1PreparedElement {
                    
	private ObjectName eventConditionName_ ;
	
        [ASN1Element ( Name = "eventConditionName", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public ObjectName EventConditionName
        {
            get { return eventConditionName_; }
            set { eventConditionName_ = value;  }
        }
        
                
          
	private bool enabled_ ;
	
        private bool  enabled_present = false ;
	[ASN1Boolean( Name = "" )]
    
        [ASN1Element ( Name = "enabled", IsOptional =  true , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public bool Enabled
        {
            get { return enabled_; }
            set { enabled_ = value; enabled_present = true;  }
        }
        
                
          
	private Priority priority_ ;
	
        private bool  priority_present = false ;
	
        [ASN1Element ( Name = "priority", IsOptional =  true , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public Priority Priority
        {
            get { return priority_; }
            set { priority_ = value; priority_present = true;  }
        }
        
                
          
	private bool alarmSummaryReports_ ;
	
        private bool  alarmSummaryReports_present = false ;
	[ASN1Boolean( Name = "" )]
    
        [ASN1Element ( Name = "alarmSummaryReports", IsOptional =  true , HasTag =  true, Tag = 3 , HasDefaultValue =  false )  ]
    
        public bool AlarmSummaryReports
        {
            get { return alarmSummaryReports_; }
            set { alarmSummaryReports_ = value; alarmSummaryReports_present = true;  }
        }
        
                
          
	private Unsigned32 evaluationInterval_ ;
	
        private bool  evaluationInterval_present = false ;
	
        [ASN1Element ( Name = "evaluationInterval", IsOptional =  true , HasTag =  true, Tag = 4 , HasDefaultValue =  false )  ]
    
        public Unsigned32 EvaluationInterval
        {
            get { return evaluationInterval_; }
            set { evaluationInterval_ = value; evaluationInterval_present = true;  }
        }
        
                
  
        public bool isEnabledPresent () {
            return this.enabled_present == true;
        }
        
        public bool isPriorityPresent () {
            return this.priority_present == true;
        }
        
        public bool isAlarmSummaryReportsPresent () {
            return this.alarmSummaryReports_present == true;
        }
        
        public bool isEvaluationIntervalPresent () {
            return this.evaluationInterval_present == true;
        }
        

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(AlterEventConditionMonitoring_Request));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
